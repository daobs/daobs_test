<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<select id="duplicateEmail" parameterType="String" resultType="int">
		select count(email) as cnt
		from member
		where email=#{email}
	</select>
	<select id="duplicateId" parameterType="String" resultType="int">
		SELECT COUNT(id) as cnt
		FROM member      
		WHERE id=#{id}    
	</select>
	<update id="updateFile" parameterType="Map">
		update member
		set fname = #{fname}
		where id = #{id}
	</update>
	<update id="updatePw" parameterType="Map">
		update member 
		set passwd = #{passwd}
		where id = #{id}
	</update>
	<select id="getFname" parameterType="String" resultType="String">
		select fname from member
		where id = #{id}        
	</select>
	<select id="loginCheck" parameterType="String" resultType="int">
		select count(*) from member
		where id= #{id}            
		and passwd= #{passwd}       
	</select>
	<select id="getGrade" parameterType="String" resultType="String">
		select grade from member
		where id = #{id}      
	</select>
	<delete id="delete" parameterType="String">
		delete from member
		where id = #{id}  
	</delete>
	<update id="update" parameterType="MemberDTO">
		update member 
		set tel      = #{tel} ,
		    email    = #{email} ,
		    zipcode  = #{zipcode} ,
		    address1 = #{address1} ,
		    address2 = #{address2} ,
		    job      = #{job}  
		where id = #{id} 
	</update>
	<insert id="create" parameterType="MemberDTO">
		INSERT INTO member(id, passwd, mname, tel,email, zipcode,address1,address2, job,mdate, fname, grade)                
		VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email}, #{zipcode},#{address1},#{address2},#{job},sysdate,#{fname},'H')                     
	</insert>
	<select id="read" parameterType="String" resultType="MemberDTO">
		SELECT id, mname, tel, email, zipcode, address1, address2, job, mdate, fname, grade
		FROM member where id= #{id}                                                       
	</select>
	<select id="total" parameterType="Map" resultType="int">
		select count(*) from member
		<where>
			<if test="col =='mname'">
				mname like '%'||#{word}||'%'
			</if>
			<if test="col =='email'">
				email like '%'||#{word}||'%'
			</if>
			<if test="col =='id'">
				id like '%'||#{word}||'%'
			</if>
		</where>         
	</select>
	<select id="list" parameterType="Map" resultType="MemberDTO">
		SELECT id, mname, tel, email, address1, address2, fname, r        
		FROM(                                                           
		    SELECT id, mname, tel, email, address1, address2, fname, rownum r 
		    FROM(                                                          
				SELECT id, mname, tel, email, address1, address2, fname      
				FROM member
				<where>
					<if test="col =='mname'">
						mname like '%'||#{word}||'%'
					</if>
					<if test="col =='email'">
						email like '%'||#{word}||'%'
					</if>
					<if test="col =='id'">
						id like '%'||#{word}||'%'
					</if>
				</where>                                                  
		     ORDER BY id ASC                                            
		    )                                                             
		)
		<![CDATA[
		WHERE r >= #{sno} AND r <= #{eno}   
		]]>                                    
	</select>

</mapper>